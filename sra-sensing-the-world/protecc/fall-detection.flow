[
   {
      "id":"6f8938de.0217a",
      "type":"ui_gauge",
      "z":"57a0f949.7a778",
      "name":"Falls Gauge",
      "group":"f6ac89c8.2bb78",
      "order":1,
      "width":0,
      "height":0,
      "gtype":"gage",
      "title":"Falls",
      "label":"Falls",
      "format":"{{msg.payload.falls}}",
      "min":0,
      "max":"100",
      "colors":[
         "#ff2600",
         "#e6e600",
         "#00fa00"
      ],
      "seg1":"10",
      "seg2":"20",
      "x":750,
      "y":640,
      "wires":[

      ]
   },
   {
      "id":"1f4dc629.bf2532",
      "type":"switch",
      "z":"57a0f949.7a778",
      "name":"SensorTile Event Types",
      "property":"eventType",
      "propertyType":"msg",
      "rules":[
         {
            "t":"eq",
            "v":"Accelerometer",
            "vt":"str"
         },
         {
            "t":"eq",
            "v":"Gyroscope",
            "vt":"str"
         }
      ],
      "checkall":"true",
      "repair":false,
      "outputs":2,
      "x":255,
      "y":460,
      "wires":[
         [
            "51a45936.445378",
            "a97a752c.c30408",
            "2cbcce0b.577d22"
         ],
         [
            "88554159.e8a41",
            "e7a3bcf0.7336f8",
            "f1ccc886.6ec798"
         ]
      ]
   },
   {
      "id":"51a45936.445378",
      "type":"change",
      "z":"57a0f949.7a778",
      "name":"Extract Accelerometer X",
      "rules":[
         {
            "t":"set",
            "p":"payload.AX",
            "pt":"msg",
            "to":"payload.d.X",
            "tot":"msg"
         },
         {
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"AX",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":275,
      "y":270,
      "wires":[
         [
            "744fbfe2.88d36",
            "b72df316.9ad7f8",
            "96df11dd.9e899"
         ]
      ]
   },
   {
      "id":"a97a752c.c30408",
      "type":"change",
      "z":"57a0f949.7a778",
      "name":"Extract Accelerometer Y",
      "rules":[
         {
            "t":"set",
            "p":"payload.AY",
            "pt":"msg",
            "to":"payload.d.Y",
            "tot":"msg"
         },
         {
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"AY",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":270,
      "y":310,
      "wires":[
         [
            "744fbfe2.88d36"
         ]
      ]
   },
   {
      "id":"2cbcce0b.577d22",
      "type":"change",
      "z":"57a0f949.7a778",
      "name":"Extract Accelerometer Z",
      "rules":[
         {
            "t":"set",
            "p":"payload.AZ",
            "pt":"msg",
            "to":"payload.d.Z",
            "tot":"msg"
         },
         {
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"AZ",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":270,
      "y":350,
      "wires":[
         [
            "744fbfe2.88d36"
         ]
      ]
   },
   {
      "id":"88554159.e8a41",
      "type":"change",
      "z":"57a0f949.7a778",
      "name":"Extract Gyroscope X",
      "rules":[
         {
            "t":"set",
            "p":"payload.GX",
            "pt":"msg",
            "to":"payload.d.X",
            "tot":"msg"
         },
         {
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"GX",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":265,
      "y":555,
      "wires":[
         [
            "744fbfe2.88d36"
         ]
      ]
   },
   {
      "id":"e7a3bcf0.7336f8",
      "type":"change",
      "z":"57a0f949.7a778",
      "name":"Extract Gyroscope Y",
      "rules":[
         {
            "t":"set",
            "p":"payload.GY",
            "pt":"msg",
            "to":"payload.d.Y",
            "tot":"msg"
         },
         {
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"GY",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":265,
      "y":595,
      "wires":[
         [
            "744fbfe2.88d36"
         ]
      ]
   },
   {
      "id":"f1ccc886.6ec798",
      "type":"change",
      "z":"57a0f949.7a778",
      "name":"Extract Gyroscope Z",
      "rules":[
         {
            "t":"set",
            "p":"payload.GZ",
            "pt":"msg",
            "to":"payload.d.Z",
            "tot":"msg"
         },
         {
            "t":"set",
            "p":"topic",
            "pt":"msg",
            "to":"GZ",
            "tot":"str"
         }
      ],
      "action":"",
      "property":"",
      "from":"",
      "to":"",
      "reg":false,
      "x":265,
      "y":645,
      "wires":[
         [
            "744fbfe2.88d36"
         ]
      ]
   },
   {
      "id":"93255bb7.3811b",
      "type":"debug",
      "z":"57a0f949.7a778",
      "name":"Data",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"payload",
      "targetType":"msg",
      "x":650,
      "y":340,
      "wires":[

      ]
   },
   {
      "id":"744fbfe2.88d36",
      "type":"delay",
      "z":"57a0f949.7a778",
      "name":"",
      "pauseType":"timed",
      "timeout":"5",
      "timeoutUnits":"seconds",
      "rate":"1",
      "nbRateUnits":"1",
      "rateUnits":"second",
      "randomFirst":"1",
      "randomLast":"5",
      "randomUnits":"seconds",
      "drop":true,
      "x":550,
      "y":440,
      "wires":[
         [
            "93255bb7.3811b"
         ]
      ]
   },
   {
      "id":"c62fe9b2.03d348",
      "type":"debug",
      "z":"57a0f949.7a778",
      "name":"Falls",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"payload",
      "targetType":"msg",
      "x":790,
      "y":600,
      "wires":[

      ]
   },
   {
      "id":"b72df316.9ad7f8",
      "type":"function",
      "z":"57a0f949.7a778",
      "name":"ThresholdCountFalls",
      "func":"var falls = global.get(\"falls\")||0;\nglobal.set('falls', falls);\nvar gy = msg.payload.GY ////get the gyro value\nif (gy > 600) {\n    fall++;   \n    global.set('falls', falls);\n}\nmsg.payload.falls = falls;//update payload.sprint for the next node!\nreturn msg;//return msg with all the original stuff + the updated sprint value",
      "outputs":1,
      "noerr":0,
      "x":540,
      "y":660,
      "wires":[
         [

         ]
      ]
   },
   {
      "id":"c79774d.2940b88",
      "type":"comment",
      "z":"57a0f949.7a778",
      "name":"Separate Out Sensor Data",
      "info":"To automatically send data:\n1. Change *Repeat* to interval.\n2. Click Deploy button.\n",
      "x":270,
      "y":160,
      "wires":[

      ]
   },
   {
      "id":"961ff5ae.d3252",
      "type":"comment",
      "z":"57a0f949.7a778",
      "name":"Accelerometer Data",
      "info":"To automatically send data:\n1. Change *Repeat* to interval.\n2. Click Deploy button.\n",
      "x":262,
      "y":226,
      "wires":[

      ]
   },
   {
      "id":"18025f31.dbbf09",
      "type":"comment",
      "z":"57a0f949.7a778",
      "name":"Gyroscope Data",
      "info":"To automatically send data:\n1. Change *Repeat* to interval.\n2. Click Deploy button.\n",
      "x":260,
      "y":700,
      "wires":[

      ]
   },
   {
      "id":"500daadd.ec8e8c",
      "type":"comment",
      "z":"57a0f949.7a778",
      "name":"Analyze Y for Shots",
      "info":"To automatically send data:\n1. Change *Repeat* to interval.\n2. Click Deploy button.\n",
      "x":526,
      "y":552,
      "wires":[

      ]
   },
   {
      "id":"d9ae1843.5ffa7",
      "type":"rbe",
      "z":"57a0f949.7a778",
      "name":"Fall Detected Notification",
      "func":"deadbandEq",
      "gap":"1",
      "start":"",
      "inout":"in",
      "property":"payload.states",
      "x":935,
      "y":500,
      "wires":[
         [
            "3384c390.e86c94"
         ]
      ]
   },
   {
      "id":"3384c390.e86c94",
      "type":"ui_toast",
      "z":"57a0f949.7a778",
      "position":"dialog",
      "displayTime":"60",
      "highlight":"",
      "sendall":true,
      "outputs":1,
      "ok":"OK",
      "cancel":"",
      "topic":"Fall Detection",
      "name":"Fall Detected (Inflating Knee Pad)",
      "x":985,
      "y":550,
      "wires":[
         [

         ]
      ]
   },
   {
      "id":"861a0a33.108078",
      "type":"ibmiot in",
      "z":"57a0f949.7a778",
      "authentication":"apiKey",
      "apiKey":"574dea7a.a2a9a4",
      "inputType":"evt",
      "logicalInterface":"",
      "ruleId":"",
      "deviceId":"AM1V310_313D48",
      "applicationId":"",
      "deviceType":"+",
      "eventType":"+",
      "commandType":"",
      "format":"json",
      "name":"STD48",
      "service":"registered",
      "allDevices":false,
      "allApplications":false,
      "allDeviceTypes":true,
      "allLogicalInterfaces":false,
      "allEvents":true,
      "allCommands":false,
      "allFormats":false,
      "qos":"0",
      "x":50,
      "y":460,
      "wires":[
         [
            "1f4dc629.bf2532"
         ]
      ]
   },
   {
      "id":"96df11dd.9e899",
      "type":"function",
      "z":"57a0f949.7a778",
      "name":"WindowCountFalls",
      "func":"// determines the average of all payload values passed in \n// over the specified time range\n// https://discourse.nodered.org/t/nodes-suggestion-for-timed-rolling-average-and-desynchronised-sum/4933\nconst range = 20;   // window time millisecs\nlet buffer = context.get('buffer') || [];\nlet falls = context.get('falls') || 0;   // the accumulated total so far\n//use the gyroscope Y values\nlet value = Number(msg.payload.AX);\n// remove any samples that are too old\nvar states = global.get( \"statecount\")||0;\nwhile (buffer.length >= range-1) \n{\n    // remove oldest sample from array and total\n    //node.warn(`removing oldest ${buffer[0].value}`);\n    buffer.shift();\n}\n// add the new sample to the end\nbuffer.push({value: value});\ncontext.set('buffer', buffer);\n\nif (buffer.length > 10)//looks at a full second of data\n{\n    var min = 5000;\n    var max = -5000;\n    for (i = 0; i < buffer.length; i++)\n    {\n        if (buffer[i].value < min)//for all the data in the half-second, the max and min value are initzialized\n        {\n            min = buffer[i].value;\n        }\n        if (buffer[i].value > max)\n        {\n            max = buffer[i].value;\n        }\n    }\n    if (min < -1000 && max > -500)//if the min and max in within the thresholds, it counts as a shot\n    {\n        falls++;\n        context.set('buffer', []);\n        states = 1\n    }\n    if (min < -10 && max > 10) \n    {\n        node.warn(`length: ${buffer.length}, min: ${min}, max: ${max}, falls: ${falls}`);//prints out the data values in the display\n    }\n  \n}\n//record steps in context\ncontext.set('falls', falls);\n\nmsg.payload.falls = context.get('falls');\nmsg.payload.states = states; \nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":530,
      "y":620,
      "wires":[
         [
            "c62fe9b2.03d348",
            "6f8938de.0217a",
            "d9ae1843.5ffa7"
         ]
      ]
   },
   {
      "id":"f6ac89c8.2bb78",
      "type":"ui_group",
      "z":"",
      "name":"Falls",
      "tab":"bffb1fd2.cb033",
      "disp":true,
      "width":"6",
      "collapse":false
   },
   {
      "id":"574dea7a.a2a9a4",
      "type":"ibmiot",
      "z":"",
      "name":"SensortileD48",
      "keepalive":"60",
      "serverName":"",
      "cleansession":true,
      "appId":"",
      "shared":false
   },
   {
      "id":"bffb1fd2.cb033",
      "type":"ui_tab",
      "z":"",
      "name":"Fall Detection",
      "icon":"dashboard",
      "disabled":false,
      "hidden":false
   }
]
